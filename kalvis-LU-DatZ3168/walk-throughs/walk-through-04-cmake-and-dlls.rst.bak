Walk-Through 4: CMake and DLLs
===============================

Build projects as several libraries and other parts that depend on them.


Objective
---------

Build and run C++ code with CMake on Windows and Linux. Build DLLs (and also static libs) and use them in other projects.


Overview of Steps
^^^^^^^^^^^^^^^^^

**Step 1**
  Try out the CMake tool: Command-line ``cmake`` on a Windows or Linux machine.

**Step 2**
  Build shared libraries: Use ``cmake`` to create DLLs (dynamic link libraries on Windows) or SO (shared objects on Linux).

**Step 3**
  Use the shared libraries: Create another project using the includes and libraries from an earlier one.



Steps in Detail
----------------

Step 1: Try out the CMake tool
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


GitHub Layout
^^^^^^^^^^^^^^

Create a separate **private** repository in GitHub.

.. code block:: text

  [Your_GitHub_Root]
      [task1]
          Makefile
          somefile1.cpp
          somefile2.cpp
          somefile2.h
          input01.txt
          input02.txt
          expected01.txt
          expected02.txt
      [task2]
      [task3]
      [task4]
      [design-task]
